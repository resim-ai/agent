openapi: 3.0.2
info:
  title: ReRun Worker API
  version: "0.1"
servers:
  - url: /worker/v1
paths:
  /health:
    get:
      description: Returns whether the service is healthy or not.
      operationId: health
      tags:
        - health
      responses:
        "200":
          description: OK
  /workerapiping:
    get:
      description: Used for testing, to validate the specific existence of the Worker API
      operationId: workerAPIPing
      responses:
        "200":
          description: OK
  /task/record:
    post:
      description: Record the time taken by a task.
      operationId: createTaskRecord
      tags:
        - task
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/taskRecordInput"
      responses:
        "201":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/taskRecordCreationOutput"
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthenticated"
      security:
        - OAuth:
          - worker
  /task/{taskName}/update:
      post:
        description: Update task status from agent
        operationId: updateTask
        tags:
          - agent
        parameters:
          - name: taskName
            in: path
            required: true
            schema:
              $ref: "#/components/schemas/taskName"
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/updateTaskInput"
        responses:
          "200":
            description: OK
          "401":
            $ref: "#/components/responses/unauthenticated"
        security:
          - OAuth:
            - agent
  /agent/heartbeat:
      post:
        description: Heartbeat endpoint for agents
        operationId: agentHeartbeat
        tags:
          - agent
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/agentHeartbeatInput"
        responses:
          "200":
            description: OK
          "401":
            $ref: "#/components/responses/unauthenticated"
        security:
          - OAuth:
            - agent
components:
  securitySchemes:
    OAuth:
      type: oauth2
      description: This API uses OAuth 2
      flows:
        authorizationCode:
          authorizationUrl: https://resim.us.auth0.com/authorize
          tokenUrl: https://resim.us.auth0.com/oauth/token
          refreshUrl: https://resim.us.auth0.com/oauth/token
          scopes:
            worker: Act as a worker.
            agent: Act as an agent.
        implicit:
          authorizationUrl: https://resim.us.auth0.com/authorize
          scopes:
            worker: Act as a worker.
        clientCredentials:
          tokenUrl: https://resim.us.auth0.com/oauth/token
          scopes:
            worker: Act as a worker.
  schemas:
    jobID:
      $ref: ../customerapi/rerun.yml#/components/schemas/jobID
    jobStatus:
      $ref: ../customerapi/rerun.yml#/components/schemas/jobStatus
    taskType:
      type: string
      enum:
        - EXPERIENCE
        - METRICS
        - BATCH_METRICS
        - REPORT
    poolLabel:
      type: string
    taskName:
      type: string
      pattern: ^[^/]+$
    taskRecordCreationOutput:
      type: string
      format: uuid
    taskRecordInput:
      type: object
      required:
        - parentID
        - parentType
        - orgID
        - vcpus
        - memoryMiB
        - gpu
        - startTimestamp
        - endTimestamp
        - billable
      properties:
        parentID:
          type: string
          format: uuid
        parentType:
          $ref: "#/components/schemas/taskType"
        orgID:
          type: string
        vcpus:
          type: integer
        memoryMiB:
          type: integer
        gpu:
          type: integer
        startTimestamp:
          type: string
          format: date-time
        endTimestamp:
          type: string
          format: date-time
        billable:
          type: boolean
    taskStatus:
      type: string
      enum:
        - STARTING
        - RUNNING
        - ERROR
        - SUCCEEDED
    updateTaskInput:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/taskStatus"
        output:
          type: string
          nullable: true
    agentHeartbeatInput:
      type: object
      properties:
        agentName:
          type: string
        poolLabels:
          type: array
          items:
            $ref: "#/components/schemas/poolLabel"
        taskName:
          $ref: "#/components/schemas/taskName"
          nullable: true
        taskStatus:
          $ref: "#/components/schemas/taskStatus"
          nullable: true
  responses:
    badRequest:
      description: The request contained one or more errors.
    unauthenticated:
      description: Access token is missing or invalid.
    forbidden:
      description: The user does not have adequate privileges.
    alreadyExists:
      description: The resource already exists.
    notFound:
      description: The resource could not be found.
