---
name: Security and SBOM
on:
  workflow_call:
    inputs:
      severity:
        required: false
        type: string
        default: HIGH,CRITICAL
      repository:
        required: true
        type: string
    secrets:
      app-id:
        required: true
      private-key:
        required: true
      github-token:
        required: true

permissions:
  id-token: write
  contents: write
  pull-requests: write

concurrency:
  group: sec
  cancel-in-progress: true

env:
  TRIVY_DB_REPOSITORY: public.ecr.aws/aquasecurity/trivy-db:2

jobs:
  sbom:
    name: Scan
    runs-on: ubuntu-20.04
    outputs:
      message: ${{ steps.scan-message.outputs.message }}
      body: ${{ steps.scan-output.outputs.body }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy in GitHub SBOM mode and submit results to Dependency Graph
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          format: github
          output: dependency-results.sbom.json
          image-ref: .
          github-pat: ${{ secrets.github-token }}
          scanners: vuln,license

      - name: Upload trivy report as a Github artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sbom-report
          path: ${{ github.workspace }}/dependency-results.sbom.json
          retention-days: 90

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          ignore-unfixed: true
          format: table
          severity: ${{ inputs.severity }}
          output: vuln.output
        continue-on-error: true

      - name: Get scan output
        id: scan-output
        if: always()
        run: |
          {
            echo 'body<<EOF'
            awk 1 ORS='\n' < vuln.output
            echo EOF
          } > "$GITHUB_OUTPUT"

      - name: Generate scan message
        id: scan-message
        env:
          RESULT: ${{ steps.scan-output.outputs.body }}
        run: |
          if [ "$RESULT" = "" ]; then
                    echo "message=:tada: No vulnerabilities found!" >>"$GITHUB_OUTPUT"
          else
                    echo "message=:warning: Vulnerabilites found!" >>"$GITHUB_OUTPUT"
          fi

  deployment_bot_comment:
    name: Deployment Bot Comment
    if: github.event_name == 'pull_request'
    needs: [sbom]
    uses: ./.github/workflows/create-update-deployment-bot-comment.yml
    with:
      repository: ${{ inputs.repository }}
      pr_number: ${{ github.event.pull_request.number }}
      ref_name: ${{ github.ref_name }}
      comment_key: sec-
      comment_body: |
        # :lock: Vulnerability Scan Summary

        ${{ needs.sbom.outputs.message }}

        See [Handling Vulnerabilities](https://github.com/resim-ai/rerun/blob/main/docs/handling-vulnerabilities.md) for instructions on what to do with this information.

        <details><summary>Show Details</summary>

        \`\`\`\n
        ${{ needs.sbom.outputs.body }}
        \`\`\`

        </details>

    secrets:
      DEPLOYMENT_BOT_APP_ID: ${{ secrets.app-id }}
      DEPLOYMENT_BOT_PRIVATE_KEY: ${{ secrets.private-key }}

# NOTE: Not available on our pricing tier
# - name: Upload Trivy scan results to GitHub Security tab
#   uses: github/codeql-action/upload-sarif@v2
#   with:
#     sarif_file: trivy-results.sarif
