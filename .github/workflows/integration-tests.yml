---
name: Run integration tests
on:  #trunk-ignore(yamllint/truthy)
  workflow_call:
    secrets:
      DEPLOYMENT_BOT_APP_ID:
        required: true
      DEPLOYMENT_BOT_PRIVATE_KEY:
        required: true
      agent_password:
        required: true
    inputs:
      pr:
        description: PR number
        required: true
        type: number

jobs:
  start-instance:
    runs-on: ubuntu-latest
    env:
      TF_VAR_agent_password: "${{ secrets.agent_password }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate Deployment Bot token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.DEPLOYMENT_BOT_APP_ID }}
          private-key: ${{ secrets.DEPLOYMENT_BOT_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: agent

      - name: Configure AWS Credentials - rerun_dev
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::840213157818:role/actions-agent
          aws-region: us-east-1

      - name: Setup AWS Profile - rerun_dev
        run: |
          aws configure set region us-east-1 --profile rerun_dev
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile rerun_dev
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile rerun_dev
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile rerun_dev
          aws configure list --profile rerun_dev
          aws sts get-caller-identity --profile rerun_dev

      - name: Reset AWS Environment Variables
        run: |
          echo "AWS_ACCESS_KEY_ID=" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=" >> $GITHUB_ENV
          echo "AWS_SESSION_TOKEN=" >> $GITHUB_ENV
      - name: Configure AWS Credentials - infrastructure
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::909785973729:role/actions-agent
          aws-region: us-east-1

      - name: Setup AWS Profile - infrastructure
        run: |
          aws configure set region us-east-1 --profile infrastructure
          aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID }} --profile infrastructure
          aws configure set aws_secret_access_key ${{ env.AWS_SECRET_ACCESS_KEY }} --profile infrastructure
          aws configure set aws_session_token ${{ env.AWS_SESSION_TOKEN }} --profile infrastructure
          aws sts get-caller-identity --profile infrastructure

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.1

      - name: Terraform Format Check
        working-directory: test/integration
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: test/integration
        id: init
        run: |
          aws sts get-caller-identity --profile rerun_dev
          git config --global url."https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com".insteadOf ssh://git@github.com
          terraform init -upgrade

      - name: Terraform Workspace New
        working-directory: test/integration
        id: workspace-new
        run: terraform workspace new "pr-${{ inputs.pr }}"
        continue-on-error: true

      # workspace new switches to the new workspace but we want to select it and fail if we can't for whatever reason
      - name: Terraform Workspace Select
        working-directory: test/integration
        id: workspace-select
        run: terraform workspace select "pr-${{ inputs.pr }}"

      - name: Terraform Validate
        working-directory: test/integration
        id: validate
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        working-directory: test/integration
        run: terraform apply -auto-approve -input=false

